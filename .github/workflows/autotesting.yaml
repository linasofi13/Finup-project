name: Integration Tests

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  frontend-tests:
    name: Frontend Integration Tests
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./frontend

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.17.0
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'

    - name: Install dependencies
      run: |
        npm ci
        npm install -D jest @testing-library/react @testing-library/jest-dom @testing-library/user-event

    - name: Run integration tests
      continue-on-error: true
      run: |
        npm test -- --json --outputFile=test-report.json --coverage
        # Ensure the file exists and has content
        ls -la test-report.json || echo "File not found"
        cat test-report.json || echo "Cannot read file"
    
    - name: Process test results
      if: always()
      run: |
        if [ -f "test-report.json" ]; then
          echo "### Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "✅ Passed Tests: $(jq '.numPassedTests' test-report.json)" >> $GITHUB_STEP_SUMMARY
          echo "❌ Failed Tests: $(jq '.numFailedTests' test-report.json)" >> $GITHUB_STEP_SUMMARY
          echo "⏱️ Total Time: $(jq '.testResults[].endTime - .testResults[].startTime' test-report.json | awk '{sum+=$1} END{print sum/1000 "s"}'))" >> $GITHUB_STEP_SUMMARY
          
          echo "### Failed Tests" >> $GITHUB_STEP_SUMMARY
          jq -r '.testResults[].assertionResults[] | select(.status=="failed") | "- ❌ "+.ancestorTitles[0]+" > "+.title+"\n  "+.failureMessages[0]' test-report.json >> $GITHUB_STEP_SUMMARY
        else
          echo "::warning::test-report.json not found"
          echo "### Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "⚠️ Test report file not generated" >> $GITHUB_STEP_SUMMARY
        fi  

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          test-report.json
          frontend/coverage/
        retention-days: 7

    - name: Upload test coverage
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-report
        path: frontend/coverage/
        retention-days: 7

    - name: Report test status
      if: failure()
      run: |
        echo "::warning::Integration tests failed but proceeding with merge. Please review the test results."

    - name: Check test results
      if: failure()
      run: |
        echo "::error::Integration tests failed. Please check the test results above."
        exit 1

    - name: Comment PR with results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const testReport = JSON.parse(fs.readFileSync('test-report.json', 'utf8'));
          
          const summary = `## Test Results
          - Total Tests: ${testReport.numTotalTests}
          - ✅ Passed: ${testReport.numPassedTests}
          - ❌ Failed: ${testReport.numFailedTests}
          
          ### Failed Tests
          ${testReport.testResults
            .flatMap(suite => suite.assertionResults
              .filter(test => test.status === 'failed')
              .map(test => `- ${test.ancestorTitles.join(' > ')} > ${test.title}`)
            )
            .join('\n')}
          
          [View detailed results](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID})`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: summary
          });