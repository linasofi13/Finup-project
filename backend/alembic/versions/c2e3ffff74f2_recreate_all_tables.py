"""recreate_all_tables

Revision ID: c2e3ffff74f2
Revises: 
Create Date: 2025-03-12 16:14:28.416208

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "c2e3ffff74f2"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "evc_financial",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("evc_q_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["evc_q_id"],
            ["evc_q.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_evc_financial_id"), "evc_financial", ["id"], unique=False)
    op.drop_index("ix_functional_leaders_id", table_name="functional_leaders")
    op.drop_table("functional_leaders")
    op.drop_index("ix_entornos_id", table_name="entornos")
    op.drop_table("entornos")
    op.drop_index("ix_users_email", table_name="users")
    op.drop_index("ix_users_id", table_name="users")
    op.drop_index("ix_users_username", table_name="users")
    op.drop_table("users")
    op.drop_index("ix_technical_leaders_id", table_name="technical_leaders")
    op.drop_table("technical_leaders")
    op.alter_column("entorno", "status", existing_type=sa.BOOLEAN(), nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("entorno", "status", existing_type=sa.BOOLEAN(), nullable=False)
    op.create_table(
        "technical_leaders",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="technical_leaders_pkey"),
        sa.UniqueConstraint("email", name="technical_leaders_email_key"),
    )
    op.create_index(
        "ix_technical_leaders_id", "technical_leaders", ["id"], unique=False
    )
    op.create_table(
        "users",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("email", sa.VARCHAR(length=255), autoincrement=False, nullable=True),
        sa.Column(
            "username", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column(
            "password", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.PrimaryKeyConstraint("id", name="users_pkey"),
    )
    op.create_index("ix_users_username", "users", ["username"], unique=False)
    op.create_index("ix_users_id", "users", ["id"], unique=False)
    op.create_index("ix_users_email", "users", ["email"], unique=False)
    op.create_table(
        "entornos",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("nombre", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("descripcion", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("name", sa.VARCHAR(length=60), autoincrement=False, nullable=False),
        sa.Column("status", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "creation_date", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "technical_leader_id", sa.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "functional_leader_id", sa.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["functional_leader_id"],
            ["functional_leader.id"],
            name="entornos_functional_leader_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["technical_leader_id"],
            ["technical_leader.id"],
            name="entornos_technical_leader_id_fkey",
        ),
        sa.PrimaryKeyConstraint("id", name="entornos_pkey"),
    )
    op.create_index("ix_entornos_id", "entornos", ["id"], unique=False)
    op.create_table(
        "functional_leaders",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="functional_leaders_pkey"),
        sa.UniqueConstraint("email", name="functional_leaders_email_key"),
    )
    op.create_index(
        "ix_functional_leaders_id", "functional_leaders", ["id"], unique=False
    )
    op.drop_index(op.f("ix_evc_financial_id"), table_name="evc_financial")
    op.drop_table("evc_financial")
    # ### end Alembic commands ###
