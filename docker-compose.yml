version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
    container_name: finup-frontend
    ports:
      - "3000:3000"
    environment:
      BACKEND_URL: ${BACKEND_URL}
      NEXT_PUBLIC_PROVIDERS_ENDPOINT: ${NEXT_PUBLIC_PROVIDERS_ENDPOINT}
      NEXT_PUBLIC_CATEGORY_PROVIDERS_ENDPOINT: ${NEXT_PUBLIC_CATEGORY_PROVIDERS_ENDPOINT}
      NEXT_PUBLIC_CATEGORY_ROLES_ENDPOINT: ${NEXT_PUBLIC_CATEGORY_ROLES_ENDPOINT}
      NEXT_PUBLIC_COUNTRIES_ENDPOINT: ${NEXT_PUBLIC_COUNTRIES_ENDPOINT}
      NEXT_PUBLIC_CATEGORY_LINES_ENDPOINT: ${NEXT_PUBLIC_CATEGORY_LINES_ENDPOINT}
      NEXT_PUBLIC_ROLE_PROVIDER_ENDPOINT: ${NEXT_PUBLIC_ROLE_PROVIDER_ENDPOINT}
      NEXT_PUBLIC_SUPABASE_URL: ${NEXT_PUBLIC_SUPABASE_URL}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      NEXT_PUBLIC_SUPABASE_BUCKET: ${NEXT_PUBLIC_SUPABASE_BUCKET}
      NEXT_PUBLIC_API_BASE_URL: ${NEXT_PUBLIC_API_BASE_URL}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
      NEXT_PUBLIC_BACKEND_URL: ${NEXT_PUBLIC_BACKEND_URL}
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
    container_name: finup-backend
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
    depends_on:
      - db

  db:
    image: postgres:15
    container_name: finup-db
    restart: always
    environment:
      POSTGRES_DB: finup_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
